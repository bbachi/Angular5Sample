{"version":3,"sources":["./src/app/app-state/effects/service.effects.ts","./src/app/service/multifamily/service-routing.module.ts","./src/app/service/multifamily/service.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACJ;AACF;AACW;AAEiB;AAEzB;AACyC;AACF;AACjB;AAExD;IAGE,wBAAoB,OAAgB,EAAU,YAAiC,EAAU,WAA+B;QAAxH,iBAA6H;QAAzG,YAAO,GAAP,OAAO,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAGxH,4BAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,oFAAkC,CAAC;aAC9E,GAAG,CAAC,gEAAS,CAAC;aACd,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,OAAO,CAAC;aACrE,GAAG,CAAC,UAAC,SAAS;YACX,OAAO,IAAI,2FAAyC,CAAC,SAAS,CAAC;QACnE,CAAC,CAAC,EAHsB,CAGtB,CAAC;aACF,KAAK,CAAC,cAAM,uDAAU,CAAC,EAAE,CAAC,IAAI,2FAAyC,CAAC,EAAE,CAAC,CAAC,EAAhE,CAAgE,CAAC;QAIlF,+BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mFAAiC,CAAC;aAChF,GAAG,CAAC,gEAAS,CAAC;aACd,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,OAAO,CAAC;aACpE,GAAG,CAAC,UAAC,MAAM;YACR,OAAO,IAAI,wFAAsC,CAAC,MAAM,CAAC;QAC7D,CAAC,CAAC,EAHsB,CAGtB,CAAC;aACF,KAAK,CAAC,cAAM,uDAAU,CAAC,EAAE,CAAC,IAAI,wFAAsC,CAAC,EAAE,CAAC,CAAC,EAA7D,CAA6D,CAAC;QAI7E,8BAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kFAAgC,CAAC;aAC9E,GAAG,CAAC,gEAAS,CAAC;aACd,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC;aAClE,GAAG,CAAC,UAAC,MAAM;YACR,OAAO,IAAI,uFAAqC,CAAC,MAAM,CAAC;QAC5D,CAAC,CAAC,EAHsB,CAGtB,CAAC;aACF,KAAK,CAAC,cAAM,uDAAU,CAAC,EAAE,CAAC,IAAI,uFAAqC,CAAC,EAAE,CAAC,CAAC,EAA5D,CAA4D,CAAC;QAG5E,gCAA2B,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,oFAAkC,CAAC;aAClF,GAAG,CAAC,gEAAS,CAAC;aACd,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,OAAO,CAAC;aACrE,GAAG,CAAC,UAAC,MAAM;YACR,OAAO,IAAI,yFAAuC,CAAC,MAAM,CAAC;QAC9D,CAAC,CAAC,EAHsB,CAGtB,CAAC;aACF,KAAK,CAAC,cAAM,uDAAU,CAAC,EAAE,CAAC,IAAI,yFAAuC,CAAC,EAAE,CAAC,CAAC,EAA9D,CAA8D,CAAC;QAG9E,6BAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mFAAiC,CAAC;aAC9E,GAAG,CAAC,gEAAS,CAAC;aACd,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC;aAClE,GAAG,CAAC,UAAC,MAAM;YACR,OAAO,IAAI,sFAAoC,CAAC,MAAM,CAAC;QAC3D,CAAC,CAAC,EAHsB,CAGtB,CAAC;aACF,KAAK,CAAC,cAAM,uDAAU,CAAC,EAAE,CAAC,IAAI,sFAAoC,CAAC,EAAE,CAAC,CAAC,EAA3D,CAA2D,CAAC;IA/CmD,CAAC;IAG7H;QADC,qEAAM,EAAE;;mEAOuE;IAIlF;QADC,qEAAM,EAAE;;sEAOoE;IAI7E;QADC,qEAAM,EAAE;;qEAOmE;IAG5E;QADC,qEAAM,EAAE;;uEAOqE;IAG9E;QADC,qEAAM,EAAE;;oEAOkE;IAE3E,qBAAC;CAAA;AAnD0B;;;;;;;;;;;ACZ4B;AAEvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,+EAA+E,EAAC;IAC/G,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,4EAA4E,EAAC;CAC5G;AAED;IAAA;IAKsC,CAAC;IAAD,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJvC;AAAA;IAAA;IAa+B,CAAC;IAAD,sBAAC;AAAD,CAAC","file":"service.module.chunk.js","sourcesContent":["import 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/withLatestFrom';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { Effect, Actions, toPayload } from \"@ngrx/effects\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ServiceStartService } from '../../_services/startservice.service';\r\nimport { ServiceStopService } from '../../_services/stopservice.service';\r\nimport * as startservice from '../actions/startservice';\r\n\r\n@Injectable()\r\nexport class ServiceEffects {\r\n\r\n  constructor(private action$: Actions, private startService: ServiceStartService, private stopService: ServiceStopService) { }\r\n\r\n  @Effect()\r\n  propertyAddressEffects$ = this.action$.ofType(startservice.LIST_PROPERTY_ADDRESS)\r\n    .map(toPayload)\r\n    .switchMap((payload) => this.startService.listPropertyAddress(payload)\r\n    .map((addresses) => {\r\n        return new startservice.ListPropertyAddressesSuccess(addresses)\r\n    }))\r\n    .catch(() => Observable.of(new startservice.ListPropertyAddressesFailure({})))\r\n\r\n\r\n@Effect()\r\nsubmitStartServiceEffects$ = this.action$.ofType(startservice.SUBMIT_START_SERVICE)\r\n  .map(toPayload)\r\n  .switchMap((payload) => this.startService.submitStartService(payload)\r\n  .map((result) => {\r\n      return new startservice.SubmitStartServiceSuccess(result)\r\n  }))\r\n  .catch(() => Observable.of(new startservice.SubmitStartServiceFailure({})))\r\n\r\n\r\n@Effect()\r\nsubmitStopServiceEffects$ = this.action$.ofType(startservice.SUBMIT_STOP_SERVICE)\r\n  .map(toPayload)\r\n  .switchMap((payload) => this.stopService.submitStopService(payload)\r\n  .map((result) => {\r\n      return new startservice.SubmitStopServiceSuccess(result)\r\n  }))\r\n  .catch(() => Observable.of(new startservice.SubmitStopServiceFailure({})))\r\n\r\n@Effect()\r\ngetUnavailableDatesEffects$ = this.action$.ofType(startservice.GET_UNAVAILABLE_DATES)\r\n  .map(toPayload)\r\n  .switchMap((payload) => this.startService.getUnavailableDates(payload)\r\n  .map((result) => {\r\n      return new startservice.GetUnavailableDatesSuccess(result)\r\n  }))\r\n  .catch(() => Observable.of(new startservice.GetUnavailableDatesFailure({})))\r\n\r\n@Effect()\r\ngetNearTo5PMFlagEffects$ = this.action$.ofType(startservice.GET_NEAR_TO_5PM_FLAG)\r\n  .map(toPayload)\r\n  .switchMap((payload) => this.startService.getNearTo5pmFlag(payload)\r\n  .map((result) => {\r\n      return new startservice.GetNearTo5PMFlagSuccess(result)\r\n  }))\r\n  .catch(() => Observable.of(new startservice.GetNearTo5PMFlagFailure({})))\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-state/effects/service.effects.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'start', loadChildren: 'app/service/multifamily/startservice/startservice.module#MFStartServiceModule'},\r\n  { path: 'stop', loadChildren: 'app/service/multifamily/stopservice/stopservice.module#MFStopServiceModule'},\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class MFServiceRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/multifamily/service-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { HttpModule } from '@angular/http';\r\nimport { ServiceEffects } from '../../app-state/effects';\r\nimport { MFServiceRoutingModule } from './service-routing.module'\r\nimport { ServiceStartService, ServiceStopService } from '../../_services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MFServiceRoutingModule,\r\n        EffectsModule.forRoot([ServiceEffects])\r\n     ],\r\n    declarations: [],\r\n    exports: [],\r\n    providers:[ ServiceStartService, ServiceStopService ]\r\n})\r\nexport class MFServiceModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/multifamily/service.module.ts"],"sourceRoot":"webpack:///"}